// Mocks generated by Mockito 5.4.4 from annotations
// in google_mobile_ads/test/mobile_ads_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:typed_data' as _i10;
import 'dart:ui' as _i3;

import 'package:flutter/services.dart' as _i4;
import 'package:google_mobile_ads/src/ad_containers.dart' as _i13;
import 'package:google_mobile_ads/src/ad_inspector_containers.dart' as _i15;
import 'package:google_mobile_ads/src/ad_instance_manager.dart' as _i12;
import 'package:google_mobile_ads/src/mobile_ads.dart' as _i6;
import 'package:google_mobile_ads/src/request_configuration.dart' as _i7;
import 'package:google_mobile_ads/src/webview_controller_util.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:webview_flutter/src/navigation_delegate.dart' as _i11;
import 'package:webview_flutter/webview_flutter.dart' as _i8;
import 'package:webview_flutter_platform_interface/webview_flutter_platform_interface.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePlatformWebViewController_0 extends _i1.SmartFake
    implements _i2.PlatformWebViewController {
  _FakePlatformWebViewController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObject_1 extends _i1.SmartFake implements Object {
  _FakeObject_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOffset_2 extends _i1.SmartFake implements _i3.Offset {
  _FakeOffset_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMethodChannel_3 extends _i1.SmartFake implements _i4.MethodChannel {
  _FakeMethodChannel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebViewControllerUtil_4 extends _i1.SmartFake
    implements _i5.WebViewControllerUtil {
  _FakeWebViewControllerUtil_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInitializationStatus_5 extends _i1.SmartFake
    implements _i6.InitializationStatus {
  _FakeInitializationStatus_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestConfiguration_6 extends _i1.SmartFake
    implements _i7.RequestConfiguration {
  _FakeRequestConfiguration_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WebViewController].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebViewController extends _i1.Mock implements _i8.WebViewController {
  MockWebViewController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PlatformWebViewController get platform => (super.noSuchMethod(
        Invocation.getter(#platform),
        returnValue: _FakePlatformWebViewController_0(
          this,
          Invocation.getter(#platform),
        ),
      ) as _i2.PlatformWebViewController);

  @override
  _i9.Future<void> loadFile(String? absoluteFilePath) => (super.noSuchMethod(
        Invocation.method(
          #loadFile,
          [absoluteFilePath],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadFlutterAsset(String? key) => (super.noSuchMethod(
        Invocation.method(
          #loadFlutterAsset,
          [key],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadHtmlString(
    String? html, {
    String? baseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadHtmlString,
          [html],
          {#baseUrl: baseUrl},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadRequest(
    Uri? uri, {
    _i2.LoadRequestMethod? method = _i2.LoadRequestMethod.get,
    Map<String, String>? headers = const {},
    _i10.Uint8List? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadRequest,
          [uri],
          {
            #method: method,
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> currentUrl() => (super.noSuchMethod(
        Invocation.method(
          #currentUrl,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<bool> canGoBack() => (super.noSuchMethod(
        Invocation.method(
          #canGoBack,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<bool> canGoForward() => (super.noSuchMethod(
        Invocation.method(
          #canGoForward,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<void> goBack() => (super.noSuchMethod(
        Invocation.method(
          #goBack,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> goForward() => (super.noSuchMethod(
        Invocation.method(
          #goForward,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setNavigationDelegate(_i11.NavigationDelegate? delegate) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNavigationDelegate,
          [delegate],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> clearLocalStorage() => (super.noSuchMethod(
        Invocation.method(
          #clearLocalStorage,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> runJavaScript(String? javaScript) => (super.noSuchMethod(
        Invocation.method(
          #runJavaScript,
          [javaScript],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<Object> runJavaScriptReturningResult(String? javaScript) =>
      (super.noSuchMethod(
        Invocation.method(
          #runJavaScriptReturningResult,
          [javaScript],
        ),
        returnValue: _i9.Future<Object>.value(_FakeObject_1(
          this,
          Invocation.method(
            #runJavaScriptReturningResult,
            [javaScript],
          ),
        )),
      ) as _i9.Future<Object>);

  @override
  _i9.Future<void> addJavaScriptChannel(
    String? name, {
    required void Function(_i2.JavaScriptMessage)? onMessageReceived,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addJavaScriptChannel,
          [name],
          {#onMessageReceived: onMessageReceived},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> removeJavaScriptChannel(String? javaScriptChannelName) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeJavaScriptChannel,
          [javaScriptChannelName],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> getTitle() => (super.noSuchMethod(
        Invocation.method(
          #getTitle,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<void> scrollTo(
    int? x,
    int? y,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #scrollTo,
          [
            x,
            y,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> scrollBy(
    int? x,
    int? y,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #scrollBy,
          [
            x,
            y,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.Offset> getScrollPosition() => (super.noSuchMethod(
        Invocation.method(
          #getScrollPosition,
          [],
        ),
        returnValue: _i9.Future<_i3.Offset>.value(_FakeOffset_2(
          this,
          Invocation.method(
            #getScrollPosition,
            [],
          ),
        )),
      ) as _i9.Future<_i3.Offset>);

  @override
  _i9.Future<void> enableZoom(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #enableZoom,
          [enabled],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setBackgroundColor(_i3.Color? color) => (super.noSuchMethod(
        Invocation.method(
          #setBackgroundColor,
          [color],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setJavaScriptMode(_i2.JavaScriptMode? javaScriptMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setJavaScriptMode,
          [javaScriptMode],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setUserAgent(String? userAgent) => (super.noSuchMethod(
        Invocation.method(
          #setUserAgent,
          [userAgent],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setOnConsoleMessage(
          void Function(_i2.JavaScriptConsoleMessage)? onConsoleMessage) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnConsoleMessage,
          [onConsoleMessage],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setOnJavaScriptAlertDialog(
          _i9.Future<void> Function(_i2.JavaScriptAlertDialogRequest)?
              onJavaScriptAlertDialog) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnJavaScriptAlertDialog,
          [onJavaScriptAlertDialog],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setOnJavaScriptConfirmDialog(
          _i9.Future<bool> Function(_i2.JavaScriptConfirmDialogRequest)?
              onJavaScriptConfirmDialog) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnJavaScriptConfirmDialog,
          [onJavaScriptConfirmDialog],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setOnJavaScriptTextInputDialog(
          _i9.Future<String> Function(_i2.JavaScriptTextInputDialogRequest)?
              onJavaScriptTextInputDialog) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnJavaScriptTextInputDialog,
          [onJavaScriptTextInputDialog],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> getUserAgent() => (super.noSuchMethod(
        Invocation.method(
          #getUserAgent,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<void> setOnScrollPositionChange(
          void Function(_i2.ScrollPositionChange)? onScrollPositionChange) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnScrollPositionChange,
          [onScrollPositionChange],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [AdInstanceManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdInstanceManager extends _i1.Mock implements _i12.AdInstanceManager {
  MockAdInstanceManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MethodChannel get channel => (super.noSuchMethod(
        Invocation.getter(#channel),
        returnValue: _FakeMethodChannel_3(
          this,
          Invocation.getter(#channel),
        ),
      ) as _i4.MethodChannel);

  @override
  _i5.WebViewControllerUtil get webViewControllerUtil => (super.noSuchMethod(
        Invocation.getter(#webViewControllerUtil),
        returnValue: _FakeWebViewControllerUtil_4(
          this,
          Invocation.getter(#webViewControllerUtil),
        ),
      ) as _i5.WebViewControllerUtil);

  @override
  _i9.Future<_i6.InitializationStatus> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i9.Future<_i6.InitializationStatus>.value(
            _FakeInitializationStatus_5(
          this,
          Invocation.method(
            #initialize,
            [],
          ),
        )),
      ) as _i9.Future<_i6.InitializationStatus>);

  @override
  _i9.Future<_i13.AdSize?> getAdSize(_i13.Ad? ad) => (super.noSuchMethod(
        Invocation.method(
          #getAdSize,
          [ad],
        ),
        returnValue: _i9.Future<_i13.AdSize?>.value(),
      ) as _i9.Future<_i13.AdSize?>);

  @override
  _i13.Ad? adFor(int? adId) => (super.noSuchMethod(Invocation.method(
        #adFor,
        [adId],
      )) as _i13.Ad?);

  @override
  int? adIdFor(_i13.Ad? ad) => (super.noSuchMethod(Invocation.method(
        #adIdFor,
        [ad],
      )) as int?);

  @override
  bool isWidgetAdIdMounted(int? adId) => (super.noSuchMethod(
        Invocation.method(
          #isWidgetAdIdMounted,
          [adId],
        ),
        returnValue: false,
      ) as bool);

  @override
  void mountWidgetAdId(int? adId) => super.noSuchMethod(
        Invocation.method(
          #mountWidgetAdId,
          [adId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unmountWidgetAdId(int? adId) => super.noSuchMethod(
        Invocation.method(
          #unmountWidgetAdId,
          [adId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> loadBannerAd(_i13.BannerAd? ad) => (super.noSuchMethod(
        Invocation.method(
          #loadBannerAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadInterstitialAd(_i13.InterstitialAd? ad) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadInterstitialAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadNativeAd(_i13.NativeAd? ad) => (super.noSuchMethod(
        Invocation.method(
          #loadNativeAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadRewardedAd(_i13.RewardedAd? ad) => (super.noSuchMethod(
        Invocation.method(
          #loadRewardedAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadRewardedInterstitialAd(
          _i13.RewardedInterstitialAd? ad) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadRewardedInterstitialAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadAppOpenAd(_i13.AppOpenAd? ad) => (super.noSuchMethod(
        Invocation.method(
          #loadAppOpenAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadAdManagerBannerAd(_i13.AdManagerBannerAd? ad) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAdManagerBannerAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadFluidAd(_i13.FluidAdManagerBannerAd? ad) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadFluidAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadAdManagerInterstitialAd(
          _i13.AdManagerInterstitialAd? ad) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAdManagerInterstitialAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> disposeAd(_i13.Ad? ad) => (super.noSuchMethod(
        Invocation.method(
          #disposeAd,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> showAdWithoutView(_i13.AdWithoutView? ad) =>
      (super.noSuchMethod(
        Invocation.method(
          #showAdWithoutView,
          [ad],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.RequestConfiguration> getRequestConfiguration() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequestConfiguration,
          [],
        ),
        returnValue: _i9.Future<_i7.RequestConfiguration>.value(
            _FakeRequestConfiguration_6(
          this,
          Invocation.method(
            #getRequestConfiguration,
            [],
          ),
        )),
      ) as _i9.Future<_i7.RequestConfiguration>);

  @override
  _i9.Future<void> updateRequestConfiguration(
          _i7.RequestConfiguration? requestConfiguration) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRequestConfiguration,
          [requestConfiguration],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setSameAppKeyEnabled(bool? isEnabled) => (super.noSuchMethod(
        Invocation.method(
          #setSameAppKeyEnabled,
          [isEnabled],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setAppMuted(bool? muted) => (super.noSuchMethod(
        Invocation.method(
          #setAppMuted,
          [muted],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setAppVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setAppVolume,
          [volume],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setImmersiveMode(
    _i13.AdWithoutView? ad,
    bool? immersiveModeEnabled,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setImmersiveMode,
          [
            ad,
            immersiveModeEnabled,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> disableSDKCrashReporting() => (super.noSuchMethod(
        Invocation.method(
          #disableSDKCrashReporting,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> disableMediationInitialization() => (super.noSuchMethod(
        Invocation.method(
          #disableMediationInitialization,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String> getVersionString() => (super.noSuchMethod(
        Invocation.method(
          #getVersionString,
          [],
        ),
        returnValue: _i9.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getVersionString,
            [],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<void> setServerSideVerificationOptions(
    _i13.ServerSideVerificationOptions? options,
    _i13.Ad? ad,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setServerSideVerificationOptions,
          [
            options,
            ad,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> openDebugMenu(String? adUnitId) => (super.noSuchMethod(
        Invocation.method(
          #openDebugMenu,
          [adUnitId],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> registerWebView(_i8.WebViewController? controller) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerWebView,
          [controller],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  int getWebViewId(_i8.WebViewController? controller) => (super.noSuchMethod(
        Invocation.method(
          #getWebViewId,
          [controller],
        ),
        returnValue: 0,
      ) as int);

  @override
  void openAdInspector(_i15.OnAdInspectorClosedListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #openAdInspector,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WebViewControllerUtil].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebViewControllerUtil extends _i1.Mock
    implements _i5.WebViewControllerUtil {
  MockWebViewControllerUtil() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int webViewIdentifier(_i8.WebViewController? controller) =>
      (super.noSuchMethod(
        Invocation.method(
          #webViewIdentifier,
          [controller],
        ),
        returnValue: 0,
      ) as int);
}

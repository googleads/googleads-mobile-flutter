// Autogenerated from Pigeon (v16.0.5), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import "FLTMediationExtrasHandler.g.h"

#if TARGET_OS_OSX
#import <FlutterMacOS/FlutterMacOS.h>
#else
#import <Flutter/Flutter.h>
#endif

#if !__has_feature(objc_arc)
#error File requires ARC to be enabled.
#endif

static NSArray *wrapResult(id result, FlutterError *error) {
  if (error) {
    return @[
      error.code ?: [NSNull null], error.message ?: [NSNull null], error.details ?: [NSNull null]
    ];
  }
  return @[ result ?: [NSNull null] ];
}

static id GetNullableObjectAtIndex(NSArray *array, NSInteger key) {
  id result = array[key];
  return (result == [NSNull null]) ? nil : result;
}

NSObject<FlutterMessageCodec> *FlutterMediationExtrasHandlerGetCodec(void) {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  sSharedObject = [FlutterStandardMessageCodec sharedInstance];
  return sSharedObject;
}

void SetUpFlutterMediationExtrasHandler(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FlutterMediationExtrasHandler> *api) {
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.google_mobile_ads.FlutterMediationExtrasHandler.generateExtras"
        binaryMessenger:binaryMessenger
        codec:FlutterMediationExtrasHandlerGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(generateExtrasExtras:error:)], @"FlutterMediationExtrasHandler api (%@) doesn't respond to @selector(generateExtrasExtras:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSDictionary<NSString *, id> *arg_extras = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        id output = [api generateExtrasExtras:arg_extras error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
}

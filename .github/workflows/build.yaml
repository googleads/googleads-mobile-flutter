name: Build Status

# Step 1: Build on pull-requests or pushes to main
on:
  push:
    branches:
      - "packages/google_mobile_ads/**"
      - "{{ matrix.regex }}/**"
      - ".github/workflows/build.yaml"
  pull_request:
    branches:
    - "**"
 
jobs:
# Step 2: Build Android
  android:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        regex:
        - "samples/admob/adaptive_banner_example"
        - "samples/admob/app_open_example"
        - "samples/admob/banner_example"
        - "samples/admob/interstitial_example"
        - "samples/admob/mediation_example"
        - "samples/admob/native_platform_example"
        - "samples/admob/native_template_example"
        - "samples/admob/rewarded_example"
        - "samples/admob/rewarded_interstitial_example"   
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          fetch-depth: 0
      - name: "Install Flutter"
        run: ./.github/workflows/scripts/install-flutter.sh stable     
      - name: "Install Tools"
        run: ./.github/workflows/scripts/install-tools.sh
        env:
          GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE: ${{ matrix.REGEX }}     
      - name: "Build Android Example"
        run: ./.github/workflows/scripts/build-example.sh android ./lib/main.dart $GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE
        env:
          GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE: ${{ matrix.REGEX }}   

# Step 2: Build iOS
  iOS:
    runs-on: macOS-latest
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        regex:
        - "samples/admob/adaptive_banner_example"
        - "samples/admob/app_open_example"
        - "samples/admob/banner_example"
        - "samples/admob/interstitial_example"
        - "samples/admob/mediation_example"
        - "samples/admob/native_platform_example"
        - "samples/admob/native_template_example"
        - "samples/admob/rewarded_example"
        - "samples/admob/rewarded_interstitial_example" 
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          fetch-depth: 0  
      - name: "Install Flutter"
        run: ./.github/workflows/scripts/install-flutter.sh stable
      - name: "Install Tools"
        run: ./.github/workflows/scripts/install-tools.sh
        env:
          GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE: ${{ matrix.REGEX }}
      - name: "Build iOS Example"
        run: ./.github/workflows/scripts/build-example.sh ios ./lib/main.dart $GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE
        env:
          GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE: ${{ matrix.REGEX }}   
          
# Step 3: Build Flutter
  flutter:
    name: Build Flutter
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        regex:
        - "samples/admob/adaptive_banner_example"
        - "samples/admob/app_open_example"
        - "samples/admob/banner_example"
        - "samples/admob/interstitial_example"
        - "samples/admob/mediation_example"
        - "samples/admob/native_platform_example"
        - "samples/admob/native_template_example"
        - "samples/admob/rewarded_example"
        - "samples/admob/rewarded_interstitial_example" 
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          fetch-depth: 0
      - name: "Install Flutter"
        run: ./.github/workflows/scripts/install-flutter.sh stable
      - name: "Install Tools"
        run: ./.github/workflows/scripts/install-tools.sh
        env:
          GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE: ${{ matrix.REGEX }}        
      - name: "Flutter Analyze"
        run: |
          cd $GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE
          flutter analyze
        env:
          GOOGLEMOBILEADS_PLUGIN_SCOPE_EXAMPLE: ${{ matrix.REGEX }} 
      - name: "Flutter Format"
        run: |
          flutter pub global activate flutter_plugin_tools
          flutter pub global run flutter_plugin_tools format
          ./.github/workflows/scripts/validate-formatting.sh

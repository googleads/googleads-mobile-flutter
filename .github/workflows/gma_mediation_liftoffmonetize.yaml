#  Copyright 2024 Google LLC
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: gma_mediation_liftoffmonetize

on:
  pull_request:
    paths:
      - "packages/google_mobile_ads/mediation/gma_mediation_liftoffmonetize/**"
      - ".github/workflows/gma_mediation_liftoffmonetize.yaml"
      - "packages/google_mobile_ads/mediation/gma_mediation_liftoffmonetize/ios/**"
      - "packages/google_mobile_ads/mediation/gma_mediation_liftoffmonetize/android/**"
  push:
    branches:
      - master

jobs:
  android:
    runs-on: macos-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: "Install Flutter"
        run: ./.github/workflows/scripts/install-flutter.sh stable
      - name: "Install Tools"
        run: ./.github/workflows/scripts/install-tools.sh
      - name: "Build Example"
        run: ./.github/workflows/scripts/build-example.sh android ./lib/main.dart packages/google_mobile_ads/mediation/gma_mediation_liftoffmonetize/example
      - name: "Unit Tests"
        run: |
          cd packages/google_mobile_ads/mediation/gma_mediation_liftoffmonetize/example/android
          ./gradlew :gma_mediation_liftoffmonetize:testDebugUnitTest

# Disabling iOS tests since there is a build problem with swift, third party sdk and the latest available version of XCode.
# Unit tests are run locally to verify no breakage.
#  iOS:
#    runs-on: macos-latest
#    timeout-minutes: 40
#    steps:
#      - uses: swift-actions/setup-swift@v1
#        with:
#          swift-version: "5.7.2"
#      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
#        with:
#          fetch-depth: 0
#      - name: "Install Flutter"
#        run: ./.github/workflows/scripts/install-flutter.sh stable
#      - name: "Install Tools"
#        run: |
#          ./.github/workflows/scripts/install-tools.sh
#      - name: "Unit Tests"
#        run: |
#          cd packages/google_mobile_ads/mediation/gma_mediation_liftoffmonetize/example/ios
#          flutter clean
#          flutter pub get
#          flutter precache --ios
#          pod install
#          xcodebuild -configuration Debug -resultBundlePath TestResults VERBOSE_SCRIPT_LOGGING=YES -workspace Runner.xcworkspace -scheme Runner -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 14 Pro,OS=16.2' test
#      - uses: actions/upload-artifact@v4
#        if: failure()
#        with:
#          name: iOSTestResults
#          path: packages/google_mobile_ads/mediation/gma_mediation_liftoffmonetize/example/ios/TestResults.xcresult

  flutter:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0
      - name: "Install Flutter"
        run: ./.github/workflows/scripts/install-flutter.sh stable
      - name: "Install Tools"
        run: ./.github/workflows/scripts/install-tools.sh
      - name: "Unit Tests"
        run: |
          cd packages/google_mobile_ads/
          flutter test
      - name: "Flutter Analyze"
        run: |
          cd packages/google_mobile_ads/
          flutter analyze
      - name: "Flutter Publish"
        run: |
          cd packages/google_mobile_ads/
          flutter pub publish --dry-run
      - name: "Flutter Format"
        run: |
          flutter pub global activate flutter_plugin_tools
          flutter pub global run flutter_plugin_tools format
          ./.github/workflows/scripts/validate-formatting.sh
